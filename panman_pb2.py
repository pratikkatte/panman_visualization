# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: panman.proto

from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='panman.proto',
  package='panman',
  syntax='proto3',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x0cpanman.proto\x12\x06panman\"[\n\x06nucMut\x12\x13\n\x0bnucPosition\x18\x01 \x01(\x05\x12\x16\n\x0enucGapPosition\x18\x02 \x01(\x05\x12\x13\n\x0bnucGapExist\x18\x03 \x01(\x08\x12\x0f\n\x07mutInfo\x18\x04 \x01(\r\"\x9c\x01\n\x08mutation\x12\x0f\n\x07\x62lockId\x18\x01 \x01(\x03\x12\x15\n\rblockGapExist\x18\x02 \x01(\x08\x12\x15\n\rblockMutExist\x18\x03 \x01(\x08\x12\x14\n\x0c\x62lockMutInfo\x18\x04 \x01(\x08\x12\x16\n\x0e\x62lockInversion\x18\x05 \x01(\x08\x12#\n\x0bnucMutation\x18\x06 \x03(\x0b\x32\x0e.panman.nucMut\"@\n\x04node\x12#\n\tmutations\x18\x01 \x03(\x0b\x32\x10.panman.mutation\x12\x13\n\x0b\x61nnotations\x18\x02 \x03(\t\"n\n\x16\x63onsensusSeqToBlockIds\x12\x0f\n\x07\x62lockId\x18\x01 \x03(\x03\x12\x14\n\x0c\x63onsensusSeq\x18\x02 \x03(\r\x12\x15\n\rblockGapExist\x18\x03 \x03(\x08\x12\x16\n\x0e\x63hromosomeName\x18\x04 \x03(\t\"\\\n\x07gapList\x12\x0f\n\x07\x62lockId\x18\x01 \x01(\x03\x12\x15\n\rblockGapExist\x18\x02 \x01(\x08\x12\x14\n\x0cnucGapLength\x18\x03 \x03(\x05\x12\x13\n\x0bnucPosition\x18\x04 \x03(\x05\"=\n\x0c\x62lockGapList\x12\x15\n\rblockPosition\x18\x01 \x03(\x05\x12\x16\n\x0e\x62lockGapLength\x18\x02 \x03(\x05\"4\n\x0e\x63ircularOffset\x12\x12\n\nsequenceId\x18\x01 \x01(\t\x12\x0e\n\x06offset\x18\x02 \x01(\x05\"8\n\rrotationIndex\x12\x12\n\nsequenceId\x18\x01 \x01(\t\x12\x13\n\x0b\x62lockOffset\x18\x02 \x01(\x05\"8\n\x10sequenceInverted\x12\x12\n\nsequenceId\x18\x01 \x01(\t\x12\x10\n\x08inverted\x18\x02 \x01(\x08\"\xcc\x02\n\x04tree\x12\x0e\n\x06newick\x18\x01 \x01(\t\x12\x1b\n\x05nodes\x18\x02 \x03(\x0b\x32\x0c.panman.node\x12\x37\n\x0f\x63onsensusSeqMap\x18\x04 \x03(\x0b\x32\x1e.panman.consensusSeqToBlockIds\x12\x1d\n\x04gaps\x18\x05 \x03(\x0b\x32\x0f.panman.gapList\x12\'\n\tblockGaps\x18\x06 \x01(\x0b\x32\x14.panman.blockGapList\x12\x31\n\x11\x63ircularSequences\x18\x07 \x03(\x0b\x32\x16.panman.circularOffset\x12.\n\x0frotationIndexes\x18\x08 \x03(\x0b\x32\x15.panman.rotationIndex\x12\x33\n\x11sequencesInverted\x18\t \x03(\x0b\x32\x18.panman.sequenceInverted\"\xae\x05\n\x0f\x63omplexMutation\x12\x14\n\x0cmutationType\x18\x01 \x01(\x08\x12\x12\n\ntreeIndex1\x18\x02 \x01(\x05\x12\x12\n\ntreeIndex2\x18\x03 \x01(\x05\x12\x12\n\ntreeIndex3\x18\x04 \x01(\x05\x12\x13\n\x0bsequenceId1\x18\x05 \x01(\t\x12\x13\n\x0bsequenceId2\x18\x06 \x01(\t\x12\x15\n\rblockIdStart1\x18\x07 \x01(\x03\x12\x1b\n\x13\x62lockGapExistStart1\x18\x08 \x01(\x08\x12\x19\n\x11nucPositionStart1\x18\t \x01(\x05\x12\x1c\n\x14nucGapPositionStart1\x18\n \x01(\x05\x12\x19\n\x11nucGapExistStart1\x18\x0b \x01(\x08\x12\x13\n\x0b\x62lockIdEnd1\x18\x0c \x01(\x03\x12\x19\n\x11\x62lockGapExistEnd1\x18\r \x01(\x08\x12\x17\n\x0fnucPositionEnd1\x18\x0e \x01(\x05\x12\x1a\n\x12nucGapPositionEnd1\x18\x0f \x01(\x05\x12\x17\n\x0fnucGapExistEnd1\x18\x10 \x01(\x08\x12\x15\n\rblockIdStart2\x18\x11 \x01(\x03\x12\x1b\n\x13\x62lockGapExistStart2\x18\x12 \x01(\x08\x12\x19\n\x11nucPositionStart2\x18\x13 \x01(\x05\x12\x1c\n\x14nucGapPositionStart2\x18\x14 \x01(\x05\x12\x19\n\x11nucGapExistStart2\x18\x15 \x01(\x08\x12\x13\n\x0b\x62lockIdEnd2\x18\x16 \x01(\x03\x12\x19\n\x11\x62lockGapExistEnd2\x18\x17 \x01(\x08\x12\x17\n\x0fnucPositionEnd2\x18\x18 \x01(\x05\x12\x1a\n\x12nucGapPositionEnd2\x18\x19 \x01(\x05\x12\x17\n\x0fnucGapExistEnd2\x18\x1a \x01(\x08\x12\x13\n\x0bsequenceId3\x18\x1b \x01(\t\"[\n\ttreeGroup\x12\x1b\n\x05trees\x18\x01 \x03(\x0b\x32\x0c.panman.tree\x12\x31\n\x10\x63omplexMutations\x18\x02 \x03(\x0b\x32\x17.panman.complexMutationb\x06proto3'
)




_NUCMUT = _descriptor.Descriptor(
  name='nucMut',
  full_name='panman.nucMut',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='nucPosition', full_name='panman.nucMut.nucPosition', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='nucGapPosition', full_name='panman.nucMut.nucGapPosition', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='nucGapExist', full_name='panman.nucMut.nucGapExist', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='mutInfo', full_name='panman.nucMut.mutInfo', index=3,
      number=4, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=24,
  serialized_end=115,
)


_MUTATION = _descriptor.Descriptor(
  name='mutation',
  full_name='panman.mutation',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='blockId', full_name='panman.mutation.blockId', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='blockGapExist', full_name='panman.mutation.blockGapExist', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='blockMutExist', full_name='panman.mutation.blockMutExist', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='blockMutInfo', full_name='panman.mutation.blockMutInfo', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='blockInversion', full_name='panman.mutation.blockInversion', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='nucMutation', full_name='panman.mutation.nucMutation', index=5,
      number=6, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=118,
  serialized_end=274,
)


_NODE = _descriptor.Descriptor(
  name='node',
  full_name='panman.node',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='mutations', full_name='panman.node.mutations', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='annotations', full_name='panman.node.annotations', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=276,
  serialized_end=340,
)


_CONSENSUSSEQTOBLOCKIDS = _descriptor.Descriptor(
  name='consensusSeqToBlockIds',
  full_name='panman.consensusSeqToBlockIds',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='blockId', full_name='panman.consensusSeqToBlockIds.blockId', index=0,
      number=1, type=3, cpp_type=2, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='consensusSeq', full_name='panman.consensusSeqToBlockIds.consensusSeq', index=1,
      number=2, type=13, cpp_type=3, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='blockGapExist', full_name='panman.consensusSeqToBlockIds.blockGapExist', index=2,
      number=3, type=8, cpp_type=7, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='chromosomeName', full_name='panman.consensusSeqToBlockIds.chromosomeName', index=3,
      number=4, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=342,
  serialized_end=452,
)


_GAPLIST = _descriptor.Descriptor(
  name='gapList',
  full_name='panman.gapList',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='blockId', full_name='panman.gapList.blockId', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='blockGapExist', full_name='panman.gapList.blockGapExist', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='nucGapLength', full_name='panman.gapList.nucGapLength', index=2,
      number=3, type=5, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='nucPosition', full_name='panman.gapList.nucPosition', index=3,
      number=4, type=5, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=454,
  serialized_end=546,
)


_BLOCKGAPLIST = _descriptor.Descriptor(
  name='blockGapList',
  full_name='panman.blockGapList',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='blockPosition', full_name='panman.blockGapList.blockPosition', index=0,
      number=1, type=5, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='blockGapLength', full_name='panman.blockGapList.blockGapLength', index=1,
      number=2, type=5, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=548,
  serialized_end=609,
)


_CIRCULAROFFSET = _descriptor.Descriptor(
  name='circularOffset',
  full_name='panman.circularOffset',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='sequenceId', full_name='panman.circularOffset.sequenceId', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='offset', full_name='panman.circularOffset.offset', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=611,
  serialized_end=663,
)


_ROTATIONINDEX = _descriptor.Descriptor(
  name='rotationIndex',
  full_name='panman.rotationIndex',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='sequenceId', full_name='panman.rotationIndex.sequenceId', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='blockOffset', full_name='panman.rotationIndex.blockOffset', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=665,
  serialized_end=721,
)


_SEQUENCEINVERTED = _descriptor.Descriptor(
  name='sequenceInverted',
  full_name='panman.sequenceInverted',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='sequenceId', full_name='panman.sequenceInverted.sequenceId', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='inverted', full_name='panman.sequenceInverted.inverted', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=723,
  serialized_end=779,
)


_TREE = _descriptor.Descriptor(
  name='tree',
  full_name='panman.tree',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='newick', full_name='panman.tree.newick', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='nodes', full_name='panman.tree.nodes', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='consensusSeqMap', full_name='panman.tree.consensusSeqMap', index=2,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='gaps', full_name='panman.tree.gaps', index=3,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='blockGaps', full_name='panman.tree.blockGaps', index=4,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='circularSequences', full_name='panman.tree.circularSequences', index=5,
      number=7, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='rotationIndexes', full_name='panman.tree.rotationIndexes', index=6,
      number=8, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='sequencesInverted', full_name='panman.tree.sequencesInverted', index=7,
      number=9, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=782,
  serialized_end=1114,
)


_COMPLEXMUTATION = _descriptor.Descriptor(
  name='complexMutation',
  full_name='panman.complexMutation',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='mutationType', full_name='panman.complexMutation.mutationType', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='treeIndex1', full_name='panman.complexMutation.treeIndex1', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='treeIndex2', full_name='panman.complexMutation.treeIndex2', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='treeIndex3', full_name='panman.complexMutation.treeIndex3', index=3,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='sequenceId1', full_name='panman.complexMutation.sequenceId1', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='sequenceId2', full_name='panman.complexMutation.sequenceId2', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='blockIdStart1', full_name='panman.complexMutation.blockIdStart1', index=6,
      number=7, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='blockGapExistStart1', full_name='panman.complexMutation.blockGapExistStart1', index=7,
      number=8, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='nucPositionStart1', full_name='panman.complexMutation.nucPositionStart1', index=8,
      number=9, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='nucGapPositionStart1', full_name='panman.complexMutation.nucGapPositionStart1', index=9,
      number=10, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='nucGapExistStart1', full_name='panman.complexMutation.nucGapExistStart1', index=10,
      number=11, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='blockIdEnd1', full_name='panman.complexMutation.blockIdEnd1', index=11,
      number=12, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='blockGapExistEnd1', full_name='panman.complexMutation.blockGapExistEnd1', index=12,
      number=13, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='nucPositionEnd1', full_name='panman.complexMutation.nucPositionEnd1', index=13,
      number=14, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='nucGapPositionEnd1', full_name='panman.complexMutation.nucGapPositionEnd1', index=14,
      number=15, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='nucGapExistEnd1', full_name='panman.complexMutation.nucGapExistEnd1', index=15,
      number=16, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='blockIdStart2', full_name='panman.complexMutation.blockIdStart2', index=16,
      number=17, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='blockGapExistStart2', full_name='panman.complexMutation.blockGapExistStart2', index=17,
      number=18, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='nucPositionStart2', full_name='panman.complexMutation.nucPositionStart2', index=18,
      number=19, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='nucGapPositionStart2', full_name='panman.complexMutation.nucGapPositionStart2', index=19,
      number=20, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='nucGapExistStart2', full_name='panman.complexMutation.nucGapExistStart2', index=20,
      number=21, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='blockIdEnd2', full_name='panman.complexMutation.blockIdEnd2', index=21,
      number=22, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='blockGapExistEnd2', full_name='panman.complexMutation.blockGapExistEnd2', index=22,
      number=23, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='nucPositionEnd2', full_name='panman.complexMutation.nucPositionEnd2', index=23,
      number=24, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='nucGapPositionEnd2', full_name='panman.complexMutation.nucGapPositionEnd2', index=24,
      number=25, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='nucGapExistEnd2', full_name='panman.complexMutation.nucGapExistEnd2', index=25,
      number=26, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='sequenceId3', full_name='panman.complexMutation.sequenceId3', index=26,
      number=27, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1117,
  serialized_end=1803,
)


_TREEGROUP = _descriptor.Descriptor(
  name='treeGroup',
  full_name='panman.treeGroup',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='trees', full_name='panman.treeGroup.trees', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='complexMutations', full_name='panman.treeGroup.complexMutations', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1805,
  serialized_end=1896,
)

_MUTATION.fields_by_name['nucMutation'].message_type = _NUCMUT
_NODE.fields_by_name['mutations'].message_type = _MUTATION
_TREE.fields_by_name['nodes'].message_type = _NODE
_TREE.fields_by_name['consensusSeqMap'].message_type = _CONSENSUSSEQTOBLOCKIDS
_TREE.fields_by_name['gaps'].message_type = _GAPLIST
_TREE.fields_by_name['blockGaps'].message_type = _BLOCKGAPLIST
_TREE.fields_by_name['circularSequences'].message_type = _CIRCULAROFFSET
_TREE.fields_by_name['rotationIndexes'].message_type = _ROTATIONINDEX
_TREE.fields_by_name['sequencesInverted'].message_type = _SEQUENCEINVERTED
_TREEGROUP.fields_by_name['trees'].message_type = _TREE
_TREEGROUP.fields_by_name['complexMutations'].message_type = _COMPLEXMUTATION
DESCRIPTOR.message_types_by_name['nucMut'] = _NUCMUT
DESCRIPTOR.message_types_by_name['mutation'] = _MUTATION
DESCRIPTOR.message_types_by_name['node'] = _NODE
DESCRIPTOR.message_types_by_name['consensusSeqToBlockIds'] = _CONSENSUSSEQTOBLOCKIDS
DESCRIPTOR.message_types_by_name['gapList'] = _GAPLIST
DESCRIPTOR.message_types_by_name['blockGapList'] = _BLOCKGAPLIST
DESCRIPTOR.message_types_by_name['circularOffset'] = _CIRCULAROFFSET
DESCRIPTOR.message_types_by_name['rotationIndex'] = _ROTATIONINDEX
DESCRIPTOR.message_types_by_name['sequenceInverted'] = _SEQUENCEINVERTED
DESCRIPTOR.message_types_by_name['tree'] = _TREE
DESCRIPTOR.message_types_by_name['complexMutation'] = _COMPLEXMUTATION
DESCRIPTOR.message_types_by_name['treeGroup'] = _TREEGROUP
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

nucMut = _reflection.GeneratedProtocolMessageType('nucMut', (_message.Message,), {
  'DESCRIPTOR' : _NUCMUT,
  '__module__' : 'panman_pb2'
  # @@protoc_insertion_point(class_scope:panman.nucMut)
  })
_sym_db.RegisterMessage(nucMut)

mutation = _reflection.GeneratedProtocolMessageType('mutation', (_message.Message,), {
  'DESCRIPTOR' : _MUTATION,
  '__module__' : 'panman_pb2'
  # @@protoc_insertion_point(class_scope:panman.mutation)
  })
_sym_db.RegisterMessage(mutation)

node = _reflection.GeneratedProtocolMessageType('node', (_message.Message,), {
  'DESCRIPTOR' : _NODE,
  '__module__' : 'panman_pb2'
  # @@protoc_insertion_point(class_scope:panman.node)
  })
_sym_db.RegisterMessage(node)

consensusSeqToBlockIds = _reflection.GeneratedProtocolMessageType('consensusSeqToBlockIds', (_message.Message,), {
  'DESCRIPTOR' : _CONSENSUSSEQTOBLOCKIDS,
  '__module__' : 'panman_pb2'
  # @@protoc_insertion_point(class_scope:panman.consensusSeqToBlockIds)
  })
_sym_db.RegisterMessage(consensusSeqToBlockIds)

gapList = _reflection.GeneratedProtocolMessageType('gapList', (_message.Message,), {
  'DESCRIPTOR' : _GAPLIST,
  '__module__' : 'panman_pb2'
  # @@protoc_insertion_point(class_scope:panman.gapList)
  })
_sym_db.RegisterMessage(gapList)

blockGapList = _reflection.GeneratedProtocolMessageType('blockGapList', (_message.Message,), {
  'DESCRIPTOR' : _BLOCKGAPLIST,
  '__module__' : 'panman_pb2'
  # @@protoc_insertion_point(class_scope:panman.blockGapList)
  })
_sym_db.RegisterMessage(blockGapList)

circularOffset = _reflection.GeneratedProtocolMessageType('circularOffset', (_message.Message,), {
  'DESCRIPTOR' : _CIRCULAROFFSET,
  '__module__' : 'panman_pb2'
  # @@protoc_insertion_point(class_scope:panman.circularOffset)
  })
_sym_db.RegisterMessage(circularOffset)

rotationIndex = _reflection.GeneratedProtocolMessageType('rotationIndex', (_message.Message,), {
  'DESCRIPTOR' : _ROTATIONINDEX,
  '__module__' : 'panman_pb2'
  # @@protoc_insertion_point(class_scope:panman.rotationIndex)
  })
_sym_db.RegisterMessage(rotationIndex)

sequenceInverted = _reflection.GeneratedProtocolMessageType('sequenceInverted', (_message.Message,), {
  'DESCRIPTOR' : _SEQUENCEINVERTED,
  '__module__' : 'panman_pb2'
  # @@protoc_insertion_point(class_scope:panman.sequenceInverted)
  })
_sym_db.RegisterMessage(sequenceInverted)

tree = _reflection.GeneratedProtocolMessageType('tree', (_message.Message,), {
  'DESCRIPTOR' : _TREE,
  '__module__' : 'panman_pb2'
  # @@protoc_insertion_point(class_scope:panman.tree)
  })
_sym_db.RegisterMessage(tree)

complexMutation = _reflection.GeneratedProtocolMessageType('complexMutation', (_message.Message,), {
  'DESCRIPTOR' : _COMPLEXMUTATION,
  '__module__' : 'panman_pb2'
  # @@protoc_insertion_point(class_scope:panman.complexMutation)
  })
_sym_db.RegisterMessage(complexMutation)

treeGroup = _reflection.GeneratedProtocolMessageType('treeGroup', (_message.Message,), {
  'DESCRIPTOR' : _TREEGROUP,
  '__module__' : 'panman_pb2'
  # @@protoc_insertion_point(class_scope:panman.treeGroup)
  })
_sym_db.RegisterMessage(treeGroup)


# @@protoc_insertion_point(module_scope)
